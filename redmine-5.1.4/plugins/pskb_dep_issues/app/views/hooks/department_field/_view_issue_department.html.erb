<% if @issue.tracker_id == 1 %>
<style>

    .department-init {
        display: flex;
        align-items: center;
        justify-content: left;
        gap: 15px;
    }

    #approved_text {
        color: #13ea4e;
    }

    #reject_text {
        color: #ea1313;
    }

    #department-id {
        display: flex; /* Выстраивает "label" и "value" в одну строку, если нужно */
        gap: 15px; /* Расстояние между "label" и "value" */
    }

    #department-id .label {
        font-weight: bold
    }

    #neg-container button {
        margin-left: 5px; /* Расстояние между кнопками */
    }

    .reject-modal {
        display: none;
        position: fixed;
        background: #ffffff85;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
    }
  
    .reject-modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px 20px 0px 20px;
        border: 1px solid #888;
        border-radius: 10px;
        width: 50%;
    }

    #neg-container {
        margin: 10px 0px 10px 0px;
    }

    .reject-btn{
        color: white !important;
        font-size: 15px;
        background: red;
        cursor: pointer;
    }

    .approve-btn {
        background: #34b234
    }

    .approve-btn a {
        color: white !important;
        font-size: 15px;
    }
    .approve-btn a:link, .reject-btn a:link{
        text-decoration: none;
    }
    .approve-btn a:hover, .reject-btn a:hover{
        text-decoration: none;
    }
    .approve-btn a:visited, .reject-btn a:visited{
        text-decoration: none;
    }
    .approve-btn a:active, .reject-btn a:active{
        text-decoration: none;
    }

    .reject-close-btn {
        color: black;
        font-size: 15px;
        border-size: 1000px;
        margin-top: 0px;
    }
    .reject-close-btn:hover,
    .reject-close-btn:focus {
        color: #aaa;
        text-decoration: none;
        cursor: pointer;
    }

    #reject-comment-container {
        margin: 0 auto;
    }

    .reject-actions {
        margin: 10px 10px 10px 0px;
    }

    .reject-comment {
        width: 100%;
        height: 100%;
        padding: 20px;
        border: 1px solid #ddd;
        resize: none;
        border-radius: 8px;
        background-color: #f9f9f9;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    #notify {
        color: red;
        font-size: 0.9em;
        display: none;
    }

    button:disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }
</style>
<hr>
<div class="department-init">
    <div id="department-id" class="department-name">
        <div class="label">Подразделение-инициатор: </div>
        <% if !PskbDepIssue.find_by(id: @issue.department_id).nil? %>
            <div class="value"><%= Department.find(PskbDepIssue.find(@issue.department_id).dep_id).name %></div>
        <% else %>
            <div class="value">Не выбрано</div>
        <% end %>
    </div>
    <% if !PskbDepIssue.find_by(id: @issue.department_id).nil?%>
    <div id="neg-container">
    <% if @issue.status_id == ISSUES_NEGOTIATION_STAT && @issue.approved_owner.nil? && (User.current.admin? || User.current == User.find(PskbDepIssue.find_by(dep_id: @issue.department_id).user_id))%>
        <div id="reject-modal" class="reject-modal" style="display: none;">
            <div id="modal-content" class="reject-modal-content">
                <div>
                    <h2>Причина отклонения</h2>
                </div>
                <div id="reject-comment-container">
                    <textarea id="reject-comment" class="reject-comment" placeholder="Оставьте ваш комментарий"></textarea>
                    <div id="notify">Комментарий должен быть больше 5 символов!</div>
                </div>
                <div class="reject-actions">
                    <button id="reject-issue-btn" class="reject-btn">Отклонить</button>
                    <button id="reject-close-btn" class="reject-close-btn">Отменить</button>
                </div>
            </div>
        </div>
        <div class="actions-dep-btns">
            <button class="approve-btn"><%= link_to 'Согласовать', approve_issue_issue_path(@issue), method: :post %></button>
            <button id="openRejectModal" class="reject-btn">Отклонить</button>     
        </div>
    <% elsif  @issue.approved_owner == true %>
        <div id="approved_text">Согласовано руководителем подразделения</div>
    <% elsif @issue.approved_owner == false %>
        <div id="reject_text">Не согласовано руководителем подразделения</div>
    <% else %>
    <% end %>
    </div>
    <% else %>
    <div id="neg-container"><br/></div>
    <% end %>
</div>
<hr>

<script>
    const modalReject = document.getElementById("reject-modal");
    const openModalReject = document.getElementById("openRejectModal");
    const closeModalReject = document.getElementById("reject-close-btn");
    const notify = document.getElementById('notify');
    var commentArea = document.getElementById("reject-comment");

    openModalReject.addEventListener('click', function() {
        modalReject.style.display = "block";
    })

    closeModalReject.addEventListener('click', function() {
        commentArea.value = '';
        validateTextarea()
        modalReject.style.display = "none";
    })

    var rejectIssueBtn = document.getElementById("reject-issue-btn");

    function sendComment(comment) {
        const issueObj = <%= @issue.to_json.html_safe %>

        const xhr = new XMLHttpRequest()
        xhr.open('POST', `/issues/${issueObj.id}/reject_issue`, false);
        xhr.setRequestHeader('Content-Type', 'application/json');

        const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
        xhr.setRequestHeader('X-CSRF-Token', csrfToken);

        const commentJson = {
            comment: comment
        };

        xhr.send(JSON.stringify(commentJson));

        if (xhr.readyState === 4) {
            if (xhr.status === 200) {
                window.onbeforeunload = null;
                location.reload();
            } else {
                const response = JSON.parse(xhr.responseText);
                alert(response.error);
            }
      }
    }

    function rejectIssue(event) {
        const rejectComment = commentArea.value;
        commentArea.value = '';
        sendComment(rejectComment);
    }

    rejectIssueBtn.addEventListener('click', rejectIssue);

    function validateTextarea() {
        const text = commentArea.value.trim();

        if (text === "" || text.length <= 5) {
            rejectIssueBtn.disabled = true;
            notify.style.display = "block";
        } else {
            rejectIssueBtn.disabled = false;
            notify.style.display = "none";
        }
    }

    commentArea.addEventListener('input', validateTextarea);
    validateTextarea()
</script>
<% end %>